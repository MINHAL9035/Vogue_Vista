<%- include('../layouts/adminLayout/header.ejs') -%>
    <%- include('../layouts/adminLayout/navbar.ejs') -%>

        <div class="main-panel">
            <div class="content-wrapper">
                <div class="col-lg-12 stretch-card">
                    <div class="card">
                        <div class="card-body">
                            <!-- download -->
                            <div class="dropdown btn-group mt-3">
                                <button class="btn btn-primary dropdown-toggle" type="button" id="dropdownMenuButton1"
                                    data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"> Dropdown
                                </button>
                                <div class="dropdown-menu" aria-labelledby="dropdownMenuButton1">
                                    <a class="dropdown-item" href="#" onclick="downloadPDF('printThisDiv')">Download as
                                        PDF</a>
                                    <a class="dropdown-item" href="#" onclick="downloadExcel('printThisDiv')">Download
                                        as Excel</a>
                                </div>
                            </div>

                            <!-- heading -->
                            <h2
                                style="margin-left: 39%;font-family:'Lucida Sans', 'Lucida Sans Regular', 'Lucida Grande', 'Lucida Sans Unicode', Geneva, Verdana, sans-serif;">
                                Sales Report</h2>

                            <!-- date -->
                            <div class="row mt-4">
                                <div class="col-lg-6">
                                    <div class="form-group">
                                        <label for="startDatePicker">Select Start Date:</label>
                                        <input type="date" name="" id="startDatePicker" class="form-control"
                                            onchange="selectDate()">
                                    </div>
                                </div>
                                <div class="col-lg-6">
                                    <div class="form-group">
                                        <label for="endDatePicker">Select End Date:</label>
                                        <input type="date" name="" id="endDatePicker" class="form-control"
                                            onchange="selectDate()">
                                    </div>
                                </div>
                            </div>

                            <!-- table -->
                            <div class="table-responsive">
                                <div id="printThisDiv">
                                    <% if(salesReport && salesReport.length> 0 ){ %>
                                        <table class="table table-bordered table-contextual">
                                            <thead id="reportHeader">
                                                <tr>
                                                    <th>Email</th>
                                                    <th>mobile</th>
                                                    <th>Address</th>
                                                    <th>OrderId</th>
                                                    <th>Date</th>
                                                    <th>Payment Method</th>
                                                    <th>Total</th>
                                                    <th>Status</th>
                                                    <th>Qty</th>
                                                    <th>Product Name</th>
                                                </tr>
                                            </thead>
                                            <tbody id="reportBody">
                                                <% salesReport.forEach(order=>{ %>
                                                    <% order.items.forEach(item=>{ %>
                                                        <% if(item.ordered_status==="delivered" ){ %>
                                                            <tr>
                                                                <td>
                                                                    <%= order.user_id.email %>
                                                                </td>
                                                                <td>
                                                                    <%= order.user_id.mobileNumber%>
                                                                </td>
                                                                <td>
                                                                    <%= order.delivery_address %>
                                                                </td>
                                                                <td>
                                                                    <%= order.order_id%>
                                                                </td>
                                                                <td>
                                                                    <%= moment(order.date).format('DD/MM/YYYY') %>
                                                                </td>
                                                                <td>
                                                                    <%= order.payment%>
                                                                </td>
                                                                <td>
                                                                    <%= (item.price*item.quantity)-item.discountPerItem
                                                                        %>
                                                                </td>
                                                                <td>
                                                                    <%= item.ordered_status %>
                                                                </td>
                                                                <td>
                                                                    <%= item.quantity %>
                                                                </td>
                                                                <td>
                                                                    <%= item.product_id.name %>
                                                                </td>
                                                            </tr>
                                                            <% } %>
                                                                <% }) %>
                                                                    <% }) %>

                                            </tbody>
                                        </table>
                                        <% }else{ %>
                                            <p class="text-center">No Sales</p>
                                            <% } %>

                                </div>

                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Include Axios from CDN -->
        <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.1/moment.min.js"></script>
        <script src="https://cdn.jsdelivr.net/npm/toastify-js"></script>
        <!-- Include SweetAlert CDN -->
        <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

        <script>
            const selectDate = async () => {
                let startDate = document.getElementById("startDatePicker").value
                let endDate = document.getElementById("endDatePicker").value


                if (!startDate) {
                    showToast("please select both start and end date", "error")
                    return false
                }

                let startDateObj = new Date(startDate);
                let endDateObj = new Date(endDate);


                if (startDateObj > endDateObj) {
                    showToast("Start date cannot be greater than end date", "error");
                    return false;
                }

                const today = new Date();

                if (endDateObj > today) {
                    showToast("End date cannot be in the future", "error");
                    return false;
                }

                function showToast(message, type) {
                    Swal.fire({
                        text: message,
                        icon: type,
                        position: "top",
                        showConfirmButton: false,
                        timer: 3000,
                        background: "#FFFFFF",
                        customClass: {
                            popup: 'your-custom-class',
                            content: 'your-custom-content-class',
                        },
                    });
                }

                const response = await axios.post("/admin/salesReport", {
                    startDate,
                    endDate
                })

                const salesReport = response.data.selectedDate

                const reportBody = document.getElementById("reportBody")
                reportBody.innerHTML = salesReport
                    .map((order) => {
                        return order.items
                            .filter((item) => item.ordered_status === "delivered")
                            .map((item) => `
                <tr>
                     <td>${order.user[0].email}</td>
                     <td>${order.user[0].mobileNumber}</td>
                     <td>${order.delivery_address}</td>
                     <td>${order.order_id}</td>
                     <td>${moment(order.date).format('DD/MM/YYYY')}</td>
                     <td>${order.payment}</td>
                     <td>${(item.price * item.quantity) - item.discountPerItem}</td>
                     <td>${item.ordered_status}</td>
                     <td>${item.quantity}</td>
                     <td>${item.product.name}</td>
                 </tr>`)
                            .join("")
                    })
                    .join("")
                const tableHeader = `
        <tr>
            <th>Email</th>
            <th>mobile</th>
            <th>Address</th>
            <th>OrderId</th>
            <th>Date</th>
            <th>Payment Method</th>
            <th>Total</th>
            <th>Status</th>
            <th>Qty</th>
            <th>Product Name</th>
        </tr>`

                const reportHeader = document.getElementById("reportHeader")
                reportHeader.innerHTML = tableHeader

            }

        </script>

        <script src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.17.3/xlsx.full.min.js"></script>


        <script>
            function showDownloadOptions(divName) {
                const choise = confirm("Do you want to download as PDF and Excel?")

                if (choise) {
                    downloadPDF(divName)
                } else {
                    downloadExcel(divName)
                }
            }

            function downloadPDF(divName) {
                const printContents = document.getElementById(divName).innerHTML;
                const orginalContents = document.body.innerHTML;
                document.body.innerHTML = printContents;
                window.print();
                document.body.innerHTML = orginalContents;
            }

            function downloadExcel(divName) {
                const table = document.getElementById('example');
                const rows = table.querySelectorAll('tr');
                const data = [];

                // Extract table headings
                const headings = [];
                table.querySelectorAll('thead th').forEach(heading => {
                    headings.push(heading.innerText);
                });
                data.push(headings);

                // Iterate through rows and cells to extract data
                rows.forEach(row => {
                    const rowData = [];
                    row.querySelectorAll('td').forEach(cell => {
                        rowData.push(cell.innerText);
                    });
                    data.push(rowData);
                });

                // Create a new workbook
                const workbook = XLSX.utils.book_new();

                // Add the data to a new worksheet
                const worksheet = XLSX.utils.aoa_to_sheet(data);
                XLSX.utils.book_append_sheet(workbook, worksheet, 'Sales Report');

                // Generate Excel file and trigger download
                const excelBuffer = XLSX.write(workbook, { bookType: 'xlsx', type: 'array' });
                const blob = new Blob([excelBuffer], { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' });
                const fileName = 'sales_report.xlsx';
                if (navigator.msSaveBlob) { // IE 10+
                    navigator.msSaveBlob(blob, fileName);
                } else {
                    const link = document.createElement('a');
                    if (link.download !== undefined) {
                        const url = URL.createObjectURL(blob);
                        link.setAttribute('href', url);
                        link.setAttribute('download', fileName);
                        document.body.appendChild(link);
                        link.click();
                        document.body.removeChild(link);
                    }
                }
            }


        </script>

        <%- include('../layouts/adminLayout/footer.ejs') -%>