<%- include('../layouts/adminLayout/header.ejs') -%>
    <%- include('../layouts/adminLayout/navbar.ejs') -%>

        <!-- form -->
        <div class="col-12 grid-margin stretch-card">
            <div class="card">
                <div class="card-body">
                    <h4 class="card-title">Basic form elements</h4>
                    <p class="card-description"> Basic form elements </p>
                    <form class="forms-sample" method="post" enctype="multipart/form-data"
                        onsubmit="return validateForm()">
                        <div class="form-group">
                            <label for="exampleInputName1">Product Name</label>
                            <input type="hidden" class="form-control" name="id" value="<%= products._id %>">
                            <input type="text" class="form-control" name="productName" id="exampleInputName1"
                                value="<%= products.name %>" placeholder="Product Name" required>
                            <span id="productNameError" class="error-message"></span>
                        </div>
                        <div class="form-group">
                            <label for="exampleInputEmail3">Description</label>
                            <input type="text" class="form-control" name="description" id="exampleInputEmail3"
                                value="<%= products.description %>" placeholder="Description" required>
                            <span id="descriptionError" class="error-message"></span>
                        </div>
                        <div class="form-group">
                            <label for="exampleInputPassword4">Quantity</label>
                            <input type="number" class="form-control" name="quantity" id="exampleInputPassword4"
                                value="<%= products.quantity %>" placeholder="Quantity" required>
                            <span id="quantityError" class="error-message"></span>
                        </div>
                        <div class="form-group">
                            <label for="exampleSelectGender">Price</label>
                            <input type="number" class="form-control" name="price" id="exampleInputPassword4"
                                value="<%= products.price %>" placeholder="Price" required>
                            <span id="priceError" class="error-message"></span>
                        </div>
                        <div class="form-group">
                            <label>File upload</label>
                            <% for (let i=0; i < products.image.length; i++) { %>

                                <div class="image-container" id="pdtImage_<%= i %>">
                                    <img src="/myImages/<%= products.image[i] %>" alt="product Image" width="100"
                                        height="100">
                                    <a href="#" class="btn btn-outline-danger btn-sm"
                                        onclick="deleteImage(event,'<%=products.image[i]%>','<%=products._id%>','<%=i%>')">Delete</a>

                                    <% } %>
                                        <span id="imagePreview" class="mt-2 "></span>
                                        <input type="file" name="image" class="form-control file-upload-info" multiple
                                            placeholder="Upload Image" onchange="viewImage(event)"
                                            accept="image/jpeg, image/png" id="productImage">

                                </div>
                        </div>

                        <div class="form-group">
                            <label for="exampleInputCity1">Category</label>
                            <select class="form-control" name="category" id="exampleInputCity1" required>
                                <% categ.forEach(categ=>{ %>
                                    <option <%=products.category.name===categ.name ? 'selected' : '' %>>
                                        <%= categ.name %>
                                    </option>

                                    <% }) %>
                            </select>
                        </div>
                        <div class="form-group">
                            <label for="exampleTextarea1">Brand</label>
                            <input type="text" class="form-control" name="brand" id="exampleInputCity1"
                                value="<%= products.brand %>" placeholder="Brand" required>
                        </div>
                        <button type="submit" class="btn btn-primary mr-2">Submit</button>
                        <button class="btn btn-dark">Cancel</button>
                    </form>
                </div>
                <% if( messages.message ) { %>
                    <p style="color: red;">
                        <%=messages.message %>
                    </p>
                    <%}%>
            </div>
        </div>

        <!-- axios -->
        <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
        <!-- sweet alert -->
        <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
        <!-- delete image -->
        <script>
            const deleteImage = async (event, image, prdtId, index) => {
                try {
                    event.preventDefault()

                    // Show SweetAlert confirmation modal
                    const result = await Swal.fire({
                        title: 'Confirmation',
                        text: 'Are you sure you want to delete this image?',
                        icon: 'warning',
                        showCancelButton: true,
                        confirmButtonColor: '#3085d6',
                        cancelButtonColor: '#d33',
                        confirmButtonText: 'Yes, delete it!'
                    });

                    if (result.isConfirmed) {
                        confirmDeleteImage(image, prdtId, index);
                        location.reload()
                    }
                } catch (error) {
                    console.error("Error showing confirmation alert:", error.message);
                    Swal.fire('Error!', `An error occurred while showing the confirmation. ${error.message}`, 'error');
                }
            }

            async function confirmDeleteImage(image, prdtId, index) {
                try {
                    const deleted = await axios.patch("/admin/product/deleteImage", {
                        image,
                        prdtId,
                    })

                    if (deleted.data.success) {
                        Swal.fire('Deleted!', 'Item has been removed.', 'success');
                        const imageContainer = document.getElementById(`pdtImage_${index}`);
                        imageContainer.style.display = "none";

                    } else {
                        Swal.fire('Error!', 'Failed to remove item. Check console for details.', 'error');
                    }
                } catch (error) {
                    console.error("Error deleting image:", error.message);
                    Swal.fire('Error!', 'An error occurred while deleting the image. Check console for details.', 'error');
                }
            }
        </script>


        <script>
            document.addEventListener('DOMContentLoaded', function () {
                // Get the file input element
                const fileInput = document.getElementById('productImage');

                // Get the image preview container
                const imagePreviewContainer = document.getElementById('imagePreview');

                // Add an event listener to the file input
                fileInput.addEventListener('change', function () {
                    // Remove existing preview images
                    imagePreviewContainer.innerHTML = '';

                    // Loop through selected files and create image previews
                    for (const file of fileInput.files) {
                        const img = document.createElement('img');
                        img.src = URL.createObjectURL(file);
                        img.className = 'img-sm img-thumbnail mr-2';
                        img.alt = 'Image Preview';
                        img.style.width = '80px';
                        img.style.height = '80px';
                        imagePreviewContainer.appendChild(img);
                    }
                });
            });
        </script>



        <script>
            function validateForm() {
                var productName = document.getElementById('exampleInputName1').value.trim();
                var description = document.getElementById('exampleInputEmail3').value.trim();
                var quantity = document.getElementById('exampleInputPassword4').value.trim();
                var price = document.getElementById('exampleInputPassword4').value.trim();

                // Regular expressions for validation
                var positiveNumberRegex = /^[1-9]\d*$/;

                // Clear previous error messages
                clearErrors();

                // Validate each input
                if (productName === '') {
                    showError('productNameError', 'Product Name is required');
                    return false;
                }

                if (description === '') {
                    showError('descriptionError', 'Description is required');
                    return false;
                }

                if (!positiveNumberRegex.test(quantity) || parseInt(quantity, 10) < 0) {
                    showError('quantityError', 'Quantity must be a positive number');
                    return false;
                }

                if (!positiveNumberRegex.test(price) || parseInt(price, 10) < 0) {
                    showError('priceError', 'Price must be a positive number');
                    return false;
                }

                // Form is valid
                return true;
            }

            function showError(id, message) {
                document.getElementById(id).innerHTML = message;
            }

            function clearErrors() {
                var errorElements = document.querySelectorAll('.error-message');
                errorElements.forEach(function (element) {
                    element.innerHTML = '';
                });
            }
        </script>


        <%- include('../layouts/adminLayout/footer.ejs') -%>